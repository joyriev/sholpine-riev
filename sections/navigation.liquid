<div class="py-4 border-b border-gray-200">
  <div class="container">
    <div class="flex items-center justify-between">
      <nav>
        {% for link in linklists.main-menu.links %}
          <a href="{{ link.url }}">{{ link.title }}</a>
        {% endfor %}
      </nav>
      <a href="{{ shop.url }}">
        <img
          src="{{ settings.logo.image | image_url: width: 300 }}"
          alt="{{ settings.logo.alt }}"
          class="max-w-[120px] h-auto"
          height=""
          width="">
      </a>
      <div class="flex gap-4 items-center [&_svg]:size-5 [&_svg]:transition-all [&_svg]:duration-300">
        <button class="size-10 bg-rose-100 rounded-full grid place-items-center [&:hover_svg]:size-6">
          {{ 'icon-search.svg' | inline_asset_content }}
        </button>
        {%- if shop.customer_accounts_enabled -%}
          <a
            href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}"
            class="size-10 bg-sky-100 rounded-full grid place-items-center [&:hover_svg]:size-6 [&_.avatar-wrapper]:!p-0"
            rel="nofollow">
            {%- assign initial = customer.first_name | default: customer.last_name | default: customer.email | first | upcase -%}
            {%- if customer -%}
              <span class="font-medium text-black text-xl">{{ initial }}</span>
            {%- else -%}
              {{ 'icon-account.svg' | inline_asset_content }}
            {%- endif -%}
            <span class="sr-only">
              {%- liquid
                if customer
                  echo 'Account'
                else
                  echo 'Log In'
                endif
              -%}
            </span>
          </a>
        {%- endif -%}
        <button
          x-data
          @click="$store.cart.isOpen = true"
          class="size-10 bg-indigo-100 rounded-full grid place-items-center [&:hover_svg]:size-6 relative">
          {{ 'icon-cart.svg' | inline_asset_content }}
          <span x-text="$store.cart.totalItems" class="absolute -top-2 -right-2 bg-black text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">{{ cart.item_count }}</span>
        </button>
      </div>
    </div>
  </div>
</div>
<div x-data="predictiveSearch()" class="relative max-w-md mx-auto w-full">
  <form @submit.prevent="goToSearch" class="relative">
    <input
      type="search"
      x-model="query"
      @input.debounce.300ms="fetchResults"
      placeholder="Search products..."
      class="w-full border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" />
    <button type="submit" class="absolute right-2 top-1/2 -translate-y-1/2 text-gray-500 hover:text-gray-700">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="w-5 h-5"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor">
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M21 21l-4.35-4.35m0 0A7.5 7.5 0 1110.5 3a7.5 7.5 0 016.15 13.65z" />
      </svg>
    </button>
  </form>

  <!-- Dropdown -->
  <div
    x-show="open"
    @click.away="open = false"
    class="absolute z-50 bg-white border border-gray-200 rounded-lg mt-2 w-full shadow-lg">
    <template x-if="loading">
      <div class="p-3 text-sm text-gray-500">Searching...</div>
    </template>

    <template x-if="!loading && results.length === 0 && query.length > 1">
      <div class="p-3 text-sm text-gray-500">No results found.</div>
    </template>

    <template x-for="item in results" :key="item.id">
      <a :href="item.url" class="flex items-center gap-3 px-4 py-2 hover:bg-gray-50 transition">
        <img
          :src="item.image"
          alt=""
          class="w-10 h-10 object-cover rounded"
          x-show="item.image" />
        <span x-text="item.title" class="text-gray-800"></span>
      </a>
    </template>
  </div>
</div>

<script>
  function predictiveSearch() {
  return {
    query: '',
    results: [],
    loading: false,
    open: false,

    async fetchResults() {
      if (this.query.length < 2) {
        this.results = [];
        this.open = false;
        return;
      }

      this.loading = true;
      this.open = true;

      try {
        const res = await fetch(
          `/search/suggest.json?q=${encodeURIComponent(this.query)}&resources[type]=product`
        );
        const data = await res.json();

        // Extract products only (can add more types if needed)
        this.results = data.resources.results.products.map(product => ({
          id: product.id,
          title: product.title,
          url: product.url,
          image: product.image
            ? product.image
            : product.featured_image?.url || null,
        }));
      } catch (err) {
        console.error(err);
        this.results = [];
      } finally {
        this.loading = false;
      }
    },

    goToSearch() {
      if (this.query.trim()) {
        window.location.href = `/search?q=${encodeURIComponent(this.query.trim())}`;
      }
    },
  };
  }
</script>